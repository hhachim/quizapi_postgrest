version: '3.8'

services:
  db:
    build:
      context: ./docker/postgres
      dockerfile: Dockerfile
    container_name: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ./db_data:/var/lib/postgresql/data
      - ./docker/postgres/init-db:/docker-entrypoint-initdb.d
    ports:
      - "${POSTGRES_PORT}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - quizapi-network
      - traefik_network

  postgrest:
    image: postgrest/postgrest:latest
    container_name: postgrest
    environment:
      PGRST_DB_URI: ${PGRST_DB_URI}
      PGRST_DB_SCHEMA: ${PGRST_DB_SCHEMA}
      PGRST_DB_ANON_ROLE: ${PGRST_DB_ANON_ROLE}
      PGRST_JWT_SECRET: ${PGRST_JWT_SECRET}
      PGRST_SERVER_PORT: ${PGRST_SERVER_PORT}
      # Configuration CORS compl√®te
      PGRST_SERVER_CORS_ALLOWED_ORIGINS: "*"
      PGRST_SERVER_CORS_ALLOWED_HEADERS: "*"
      PGRST_SERVER_CORS_ALLOWED_METHODS: "GET, POST, PUT, PATCH, DELETE, OPTIONS"
    volumes:
      - ./docker/postgrest/postgrest.conf:/etc/postgrest.conf
    depends_on:
      db:
        condition: service_healthy
    expose:
      - "3000"
    restart: unless-stopped
    command: postgrest /etc/postgrest.conf
    networks:
      - quizapi-network
      - traefik_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.postgrest.rule=Host(`pocs.hachim.fr`) && PathPrefix(`/api`)"
      - "traefik.http.routers.postgrest.entrypoints=websecure"
      - "traefik.http.routers.postgrest.tls=true"
      - "traefik.http.routers.postgrest.tls.certresolver=myresolver"
      - "traefik.http.routers.postgrest.middlewares=postgrest-stripprefix,cors-headers"
      - "traefik.http.middlewares.postgrest-stripprefix.stripprefix.prefixes=/api"
      - "traefik.http.middlewares.cors-headers.headers.accessControlAllowMethods=GET,OPTIONS,PUT,POST,DELETE,PATCH"
      - "traefik.http.middlewares.cors-headers.headers.accessControlAllowOriginList=*"
      - "traefik.http.middlewares.cors-headers.headers.accessControlAllowHeaders=Origin,X-Requested-With,Content-Type,Accept,Authorization"
      - "traefik.http.middlewares.cors-headers.headers.accessControlMaxAge=100"
      - "traefik.http.middlewares.cors-headers.headers.addVaryHeader=true"
      - "traefik.http.services.postgrest.loadbalancer.server.port=3000"

  swagger:
    image: swaggerapi/swagger-ui:latest
    container_name: swagger
    environment:
      # Utiliser l'URL via Traefik en HTTPS
      API_URL: "https://pocs.hachim.fr/api/"
      SWAGGER_JSON_URL: "https://pocs.hachim.fr/api/"
    expose:
      - "8080"
    depends_on:
      - postgrest
    networks:
      - quizapi-network
      - traefik_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.swagger.rule=Host(`swagger.pocs.hachim.fr`)"
      - "traefik.http.routers.swagger.entrypoints=websecure"
      - "traefik.http.routers.swagger.tls=true"
      - "traefik.http.services.swagger.loadbalancer.server.port=8080"
      
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@quizapi.fr
      PGADMIN_DEFAULT_PASSWORD: pgadmin_password
    expose:
      - "80"
    depends_on:
      - db
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - quizapi-network
      - traefik_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.pgadmin.rule=Host(`pgadmin.pocs.hachim.fr`)"
      - "traefik.http.routers.pgadmin.entrypoints=websecure"
      - "traefik.http.routers.pgadmin.tls=true"
      - "traefik.http.services.pgadmin.loadbalancer.server.port=80"

volumes:
  db_data:
  pgadmin_data:

networks:
  quizapi-network:
    driver: bridge
  traefik-public:
    external: true
  traefik_network:
    external: true
    name: TraefikNetwork_wildcard.pocs.hachim.fr