{
  "info": {
    "_postman_id": "8a7b4e9c-6d5f-4e3c-8c2a-1f2a3b4c5d6e",
    "name": "Quiz API Tests",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": "Tests automatisÃ©s pour l'API Quiz"
  },
  "item": [
    {
      "name": "Auth",
      "item": [
        {
          "name": "Login Admin",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = pm.response.json();",
                  "pm.test(\"Status code is 200\", function() {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response contains JWT token\", function() {",
                  "    pm.expect(jsonData).to.be.a('string');",
                  "    pm.expect(jsonData).to.not.equal('Invalid email or password');",
                  "    pm.globals.set('jwt_token', jsonData);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"email\": \"admin@quizapi.fr\", \"pass\": \"admin_password\"}"
            },
            "url": {
              "raw": "{{apiUrl}}/rpc/login",
              "host": ["{{apiUrl}}"],
              "path": ["rpc", "login"]
            }
          }
        }
      ]
    },
    {
      "name": "Categories",
      "item": [
        {
          "name": "Get All Categories",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function() {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response is an array\", function() {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.be.an('array');",
                  "});",
                  "",
                  "pm.test(\"Categories contain required fields\", function() {",
                  "    var jsonData = pm.response.json();",
                  "    if (jsonData.length > 0) {",
                  "        pm.expect(jsonData[0]).to.have.property('id');",
                  "        pm.expect(jsonData[0]).to.have.property('name');",
                  "    }",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{apiUrl}}/categories",
              "host": ["{{apiUrl}}"],
              "path": ["categories"]
            }
          }
        }
      ]
    },
    {
      "name": "Quizzes",
      "item": [
        {
          "name": "Get Public Quizzes",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function() {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response is an array\", function() {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.be.an('array');",
                  "});",
                  "",
                  "pm.test(\"Only published and public quizzes are returned\", function() {",
                  "    var jsonData = pm.response.json();",
                  "    if (jsonData.length > 0) {",
                  "        jsonData.forEach(function(quiz) {",
                  "            pm.expect(quiz.status).to.equal('PUBLISHED');",
                  "            pm.expect(quiz.is_public).to.be.true;",
                  "        });",
                  "    }",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{apiUrl}}/quizzes?status=eq.PUBLISHED&is_public=eq.true",
              "host": ["{{apiUrl}}"],
              "path": ["quizzes"],
              "query": [
                {
                  "key": "status",
                  "value": "eq.PUBLISHED"
                },
                {
                  "key": "is_public",
                  "value": "eq.true"
                }
              ]
            }
          }
        },
        {
          "name": "Get Quiz By ID",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is either 200 or 404\", function() {",
                  "    pm.expect(pm.response.code).to.be.oneOf([200, 404]);",
                  "});",
                  "",
                  "if (pm.response.code === 200) {",
                  "    pm.test(\"Response contains quiz data\", function() {",
                  "        var jsonData = pm.response.json();",
                  "        pm.expect(jsonData).to.be.an('array');",
                  "        if (jsonData.length > 0) {",
                  "            pm.expect(jsonData[0]).to.have.property('id');",
                  "            pm.expect(jsonData[0]).to.have.property('title');",
                  "        }",
                  "    });",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{apiUrl}}/quizzes?id=eq.{{firstQuizId}}",
              "host": ["{{apiUrl}}"],
              "path": ["quizzes"],
              "query": [
                {
                  "key": "id",
                  "value": "eq.{{firstQuizId}}"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "name": "Tags",
      "item": [
        {
          "name": "Get All Tags",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function() {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response is an array\", function() {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.be.an('array');",
                  "});",
                  "",
                  "if (pm.response.json().length > 0) {",
                  "    var firstTag = pm.response.json()[0];",
                  "    pm.globals.set('firstTagId', firstTag.id);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{apiUrl}}/tags",
              "host": ["{{apiUrl}}"],
              "path": ["tags"]
            }
          }
        }
      ]
    },
    {
      "name": "Admin Operations",
      "item": [
        {
          "name": "Create New Tag",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 201\", function() {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test(\"Response contains created tag\", function() {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.be.an('array');",
                  "    if (jsonData.length > 0) {",
                  "        pm.expect(jsonData[0]).to.have.property('id');",
                  "        pm.expect(jsonData[0]).to.have.property('name');",
                  "        pm.expect(jsonData[0].name).to.equal('AutoTest');",
                  "        pm.globals.set('createdTagId', jsonData[0].id);",
                  "    }",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"name\": \"AutoTest\", \"created_by\": \"{{adminUserId}}\"}"
            },
            "url": {
              "raw": "{{apiUrl}}/tags",
              "host": ["{{apiUrl}}"],
              "path": ["tags"]
            }
          }
        },
        {
          "name": "Delete Created Tag",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 204\", function() {",
                  "    pm.response.to.have.status(204);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "url": {
              "raw": "{{apiUrl}}/tags?id=eq.{{createdTagId}}",
              "host": ["{{apiUrl}}"],
              "path": ["tags"],
              "query": [
                {
                  "key": "id",
                  "value": "eq.{{createdTagId}}"
                }
              ]
            }
          }
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "firstQuizId",
      "value": "",
      "type": "string"
    },
    {
      "key": "adminUserId",
      "value": "",
      "type": "string"
    }
  ]
}